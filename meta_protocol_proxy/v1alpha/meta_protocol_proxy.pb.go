// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: api/meta_protocol_proxy/v1alpha/meta_protocol_proxy.proto

package v1alpha

import (
	v1alpha "github.com/aeraki-mesh/meta-protocol-control-plane-api/meta_protocol_proxy/config/route/v1alpha"
	_ "github.com/cncf/xds/go/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/accesslog/v3"
	v31 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	v33 "github.com/envoyproxy/go-control-plane/envoy/config/trace/v3"
	v32 "github.com/envoyproxy/go-control-plane/envoy/type/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	any "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tracing_OperationName int32

const (
	Tracing_INGRESS Tracing_OperationName = 0
	Tracing_EGRESS  Tracing_OperationName = 1
)

// Enum value maps for Tracing_OperationName.
var (
	Tracing_OperationName_name = map[int32]string{
		0: "INGRESS",
		1: "EGRESS",
	}
	Tracing_OperationName_value = map[string]int32{
		"INGRESS": 0,
		"EGRESS":  1,
	}
)

func (x Tracing_OperationName) Enum() *Tracing_OperationName {
	p := new(Tracing_OperationName)
	*p = x
	return p
}

func (x Tracing_OperationName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tracing_OperationName) Descriptor() protoreflect.EnumDescriptor {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_enumTypes[0].Descriptor()
}

func (Tracing_OperationName) Type() protoreflect.EnumType {
	return &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_enumTypes[0]
}

func (x Tracing_OperationName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tracing_OperationName.Descriptor instead.
func (Tracing_OperationName) EnumDescriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{4, 0}
}

type MetaProtocolProxy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Deprecated: Do not use.
	ApplicationProtocol string `protobuf:"bytes,2,opt,name=application_protocol,json=applicationProtocol,proto3" json:"application_protocol,omitempty"`
	// Types that are assignable to RouteSpecifier:
	//	*MetaProtocolProxy_Rds
	//	*MetaProtocolProxy_RouteConfig
	RouteSpecifier isMetaProtocolProxy_RouteSpecifier `protobuf_oneof:"route_specifier"`
	// Deprecated: Do not use.
	Codec               *Codec                `protobuf:"bytes,5,opt,name=codec,proto3" json:"codec,omitempty"`
	MetaProtocolFilters []*MetaProtocolFilter `protobuf:"bytes,6,rep,name=meta_protocol_filters,json=metaProtocolFilters,proto3" json:"meta_protocol_filters,omitempty"`
	Tracing             *Tracing              `protobuf:"bytes,7,opt,name=tracing,proto3" json:"tracing,omitempty"`
	AccessLog           []*v3.AccessLog       `protobuf:"bytes,8,rep,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	IdleTimeout         *duration.Duration    `protobuf:"bytes,11,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	Protocol            *ApplicationProtocol  `protobuf:"bytes,12,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *MetaProtocolProxy) Reset() {
	*x = MetaProtocolProxy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaProtocolProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaProtocolProxy) ProtoMessage() {}

func (x *MetaProtocolProxy) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaProtocolProxy.ProtoReflect.Descriptor instead.
func (*MetaProtocolProxy) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *MetaProtocolProxy) GetStatPrefix() string {
	if x != nil {
		return x.StatPrefix
	}
	return ""
}

// Deprecated: Do not use.
func (x *MetaProtocolProxy) GetApplicationProtocol() string {
	if x != nil {
		return x.ApplicationProtocol
	}
	return ""
}

func (m *MetaProtocolProxy) GetRouteSpecifier() isMetaProtocolProxy_RouteSpecifier {
	if m != nil {
		return m.RouteSpecifier
	}
	return nil
}

func (x *MetaProtocolProxy) GetRds() *Rds {
	if x, ok := x.GetRouteSpecifier().(*MetaProtocolProxy_Rds); ok {
		return x.Rds
	}
	return nil
}

func (x *MetaProtocolProxy) GetRouteConfig() *v1alpha.RouteConfiguration {
	if x, ok := x.GetRouteSpecifier().(*MetaProtocolProxy_RouteConfig); ok {
		return x.RouteConfig
	}
	return nil
}

// Deprecated: Do not use.
func (x *MetaProtocolProxy) GetCodec() *Codec {
	if x != nil {
		return x.Codec
	}
	return nil
}

func (x *MetaProtocolProxy) GetMetaProtocolFilters() []*MetaProtocolFilter {
	if x != nil {
		return x.MetaProtocolFilters
	}
	return nil
}

func (x *MetaProtocolProxy) GetTracing() *Tracing {
	if x != nil {
		return x.Tracing
	}
	return nil
}

func (x *MetaProtocolProxy) GetAccessLog() []*v3.AccessLog {
	if x != nil {
		return x.AccessLog
	}
	return nil
}

func (x *MetaProtocolProxy) GetIdleTimeout() *duration.Duration {
	if x != nil {
		return x.IdleTimeout
	}
	return nil
}

func (x *MetaProtocolProxy) GetProtocol() *ApplicationProtocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

type isMetaProtocolProxy_RouteSpecifier interface {
	isMetaProtocolProxy_RouteSpecifier()
}

type MetaProtocolProxy_Rds struct {
	Rds *Rds `protobuf:"bytes,3,opt,name=rds,proto3,oneof"`
}

type MetaProtocolProxy_RouteConfig struct {
	RouteConfig *v1alpha.RouteConfiguration `protobuf:"bytes,4,opt,name=route_config,json=routeConfig,proto3,oneof"`
}

func (*MetaProtocolProxy_Rds) isMetaProtocolProxy_RouteSpecifier() {}

func (*MetaProtocolProxy_RouteConfig) isMetaProtocolProxy_RouteSpecifier() {}

type Rds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigSource    *v31.ConfigSource `protobuf:"bytes,1,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`
	RouteConfigName string            `protobuf:"bytes,2,opt,name=route_config_name,json=routeConfigName,proto3" json:"route_config_name,omitempty"`
}

func (x *Rds) Reset() {
	*x = Rds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rds) ProtoMessage() {}

func (x *Rds) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rds.ProtoReflect.Descriptor instead.
func (*Rds) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *Rds) GetConfigSource() *v31.ConfigSource {
	if x != nil {
		return x.ConfigSource
	}
	return nil
}

func (x *Rds) GetRouteConfigName() string {
	if x != nil {
		return x.RouteConfigName
	}
	return ""
}

type MetaProtocolFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *any.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *MetaProtocolFilter) Reset() {
	*x = MetaProtocolFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaProtocolFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaProtocolFilter) ProtoMessage() {}

func (x *MetaProtocolFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaProtocolFilter.ProtoReflect.Descriptor instead.
func (*MetaProtocolFilter) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *MetaProtocolFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaProtocolFilter) GetConfig() *any.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Codec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Config *any.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Codec) Reset() {
	*x = Codec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Codec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Codec) ProtoMessage() {}

func (x *Codec) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Codec.ProtoReflect.Descriptor instead.
func (*Codec) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *Codec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Codec) GetConfig() *any.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Tracing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSampling  *v32.Percent          `protobuf:"bytes,3,opt,name=client_sampling,json=clientSampling,proto3" json:"client_sampling,omitempty"`
	RandomSampling  *v32.Percent          `protobuf:"bytes,4,opt,name=random_sampling,json=randomSampling,proto3" json:"random_sampling,omitempty"`
	OverallSampling *v32.Percent          `protobuf:"bytes,5,opt,name=overall_sampling,json=overallSampling,proto3" json:"overall_sampling,omitempty"`
	Verbose         bool                  `protobuf:"varint,6,opt,name=verbose,proto3" json:"verbose,omitempty"`
	MaxTagLength    *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=max_tag_length,json=maxTagLength,proto3" json:"max_tag_length,omitempty"`
	Provider        *v33.Tracing_Http     `protobuf:"bytes,9,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Tracing) Reset() {
	*x = Tracing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracing) ProtoMessage() {}

func (x *Tracing) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracing.ProtoReflect.Descriptor instead.
func (*Tracing) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *Tracing) GetClientSampling() *v32.Percent {
	if x != nil {
		return x.ClientSampling
	}
	return nil
}

func (x *Tracing) GetRandomSampling() *v32.Percent {
	if x != nil {
		return x.RandomSampling
	}
	return nil
}

func (x *Tracing) GetOverallSampling() *v32.Percent {
	if x != nil {
		return x.OverallSampling
	}
	return nil
}

func (x *Tracing) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *Tracing) GetMaxTagLength() *wrappers.UInt32Value {
	if x != nil {
		return x.MaxTagLength
	}
	return nil
}

func (x *Tracing) GetProvider() *v33.Tracing_Http {
	if x != nil {
		return x.Provider
	}
	return nil
}

type ApplicationProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Codec        *Codec `protobuf:"bytes,2,opt,name=codec,proto3" json:"codec,omitempty"`
	Multiplexing bool   `protobuf:"varint,3,opt,name=multiplexing,proto3" json:"multiplexing,omitempty"`
}

func (x *ApplicationProtocol) Reset() {
	*x = ApplicationProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationProtocol) ProtoMessage() {}

func (x *ApplicationProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationProtocol.ProtoReflect.Descriptor instead.
func (*ApplicationProtocol) Descriptor() ([]byte, []int) {
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *ApplicationProtocol) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationProtocol) GetCodec() *Codec {
	if x != nil {
		return x.Codec
	}
	return nil
}

func (x *ApplicationProtocol) GetMultiplexing() bool {
	if x != nil {
		return x.Multiplexing
	}
	return false
}

var File_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto protoreflect.FileDescriptor

var file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDesc = []byte{
	0x0a, 0x39, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x61, 0x65, 0x72,
	0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a,
	0x23, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x33, 0x2f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x33,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76,
	0x33, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x38, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x06, 0x0a,
	0x11, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x35, 0x0a, 0x14,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x13,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x03, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x64, 0x73, 0x48, 0x00, 0x52, 0x03, 0x72, 0x64, 0x73,
	0x12, 0x68, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x65, 0x72, 0x61,
	0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12,
	0x6a, 0x0a, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x33, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x3c, 0x0a, 0x0c, 0x69, 0x64, 0x6c, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x16, 0x0a, 0x0f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x03, 0xf8,
	0x42, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x03, 0x52, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x12, 0x4d, 0x65, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x52, 0x0a, 0x05, 0x43, 0x6f,
	0x64, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xce,
	0x03, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x33, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0f, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x10,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x61, 0x78,
	0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x28,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04,
	0x08, 0x02, 0x10, 0x03, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x97, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x42, 0xa6, 0x01, 0x0a, 0x26, 0x6e, 0x65,
	0x74, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x42, 0x16, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x65, 0x72, 0x61, 0x6b,
	0x69, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x3b, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02,
	0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescOnce sync.Once
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescData = file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDesc
)

func file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescGZIP() []byte {
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescOnce.Do(func() {
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescData)
	})
	return file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDescData
}

var file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_goTypes = []interface{}{
	(Tracing_OperationName)(0),         // 0: aeraki.meta_protocol_proxy.v1alpha.Tracing.OperationName
	(*MetaProtocolProxy)(nil),          // 1: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy
	(*Rds)(nil),                        // 2: aeraki.meta_protocol_proxy.v1alpha.Rds
	(*MetaProtocolFilter)(nil),         // 3: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolFilter
	(*Codec)(nil),                      // 4: aeraki.meta_protocol_proxy.v1alpha.Codec
	(*Tracing)(nil),                    // 5: aeraki.meta_protocol_proxy.v1alpha.Tracing
	(*ApplicationProtocol)(nil),        // 6: aeraki.meta_protocol_proxy.v1alpha.ApplicationProtocol
	(*v1alpha.RouteConfiguration)(nil), // 7: aeraki.meta_protocol_proxy.config.route.v1alpha.RouteConfiguration
	(*v3.AccessLog)(nil),               // 8: envoy.config.accesslog.v3.AccessLog
	(*duration.Duration)(nil),          // 9: google.protobuf.Duration
	(*v31.ConfigSource)(nil),           // 10: envoy.config.core.v3.ConfigSource
	(*any.Any)(nil),                    // 11: google.protobuf.Any
	(*v32.Percent)(nil),                // 12: envoy.type.v3.Percent
	(*wrappers.UInt32Value)(nil),       // 13: google.protobuf.UInt32Value
	(*v33.Tracing_Http)(nil),           // 14: envoy.config.trace.v3.Tracing.Http
}
var file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_depIdxs = []int32{
	2,  // 0: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.rds:type_name -> aeraki.meta_protocol_proxy.v1alpha.Rds
	7,  // 1: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.route_config:type_name -> aeraki.meta_protocol_proxy.config.route.v1alpha.RouteConfiguration
	4,  // 2: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.codec:type_name -> aeraki.meta_protocol_proxy.v1alpha.Codec
	3,  // 3: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.meta_protocol_filters:type_name -> aeraki.meta_protocol_proxy.v1alpha.MetaProtocolFilter
	5,  // 4: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.tracing:type_name -> aeraki.meta_protocol_proxy.v1alpha.Tracing
	8,  // 5: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.access_log:type_name -> envoy.config.accesslog.v3.AccessLog
	9,  // 6: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.idle_timeout:type_name -> google.protobuf.Duration
	6,  // 7: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolProxy.protocol:type_name -> aeraki.meta_protocol_proxy.v1alpha.ApplicationProtocol
	10, // 8: aeraki.meta_protocol_proxy.v1alpha.Rds.config_source:type_name -> envoy.config.core.v3.ConfigSource
	11, // 9: aeraki.meta_protocol_proxy.v1alpha.MetaProtocolFilter.config:type_name -> google.protobuf.Any
	11, // 10: aeraki.meta_protocol_proxy.v1alpha.Codec.config:type_name -> google.protobuf.Any
	12, // 11: aeraki.meta_protocol_proxy.v1alpha.Tracing.client_sampling:type_name -> envoy.type.v3.Percent
	12, // 12: aeraki.meta_protocol_proxy.v1alpha.Tracing.random_sampling:type_name -> envoy.type.v3.Percent
	12, // 13: aeraki.meta_protocol_proxy.v1alpha.Tracing.overall_sampling:type_name -> envoy.type.v3.Percent
	13, // 14: aeraki.meta_protocol_proxy.v1alpha.Tracing.max_tag_length:type_name -> google.protobuf.UInt32Value
	14, // 15: aeraki.meta_protocol_proxy.v1alpha.Tracing.provider:type_name -> envoy.config.trace.v3.Tracing.Http
	4,  // 16: aeraki.meta_protocol_proxy.v1alpha.ApplicationProtocol.codec:type_name -> aeraki.meta_protocol_proxy.v1alpha.Codec
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_init() }
func file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_init() {
	if File_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaProtocolProxy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaProtocolFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Codec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tracing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MetaProtocolProxy_Rds)(nil),
		(*MetaProtocolProxy_RouteConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_goTypes,
		DependencyIndexes: file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_depIdxs,
		EnumInfos:         file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_enumTypes,
		MessageInfos:      file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_msgTypes,
	}.Build()
	File_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto = out.File
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_rawDesc = nil
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_goTypes = nil
	file_api_meta_protocol_proxy_v1alpha_meta_protocol_proxy_proto_depIdxs = nil
}
